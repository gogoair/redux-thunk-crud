0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/6.2.0/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.10.8
3 info using node@v6.2.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/pera/WebstormProjects/redux-thunk-crud',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/pera/.npm/redux-thunk-crud/0.8.8/package.tgz not in flight; packing
9 verbose correctMkdir /Users/pera/.npm correctMkdir not in flight; initializing
10 info lifecycle redux-thunk-crud@0.8.8~prepublish: redux-thunk-crud@0.8.8
11 verbose lifecycle redux-thunk-crud@0.8.8~prepublish: unsafe-perm in lifecycle true
12 verbose lifecycle redux-thunk-crud@0.8.8~prepublish: PATH: /usr/local/lib/node_modules/npm/bin/node-gyp-bin:/Users/pera/WebstormProjects/redux-thunk-crud/node_modules/.bin:/usr/local/Cellar/node/6.2.0/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin
13 verbose lifecycle redux-thunk-crud@0.8.8~prepublish: CWD: /Users/pera/WebstormProjects/redux-thunk-crud
14 silly lifecycle redux-thunk-crud@0.8.8~prepublish: Args: [ '-c', 'npm run build' ]
15 silly lifecycle redux-thunk-crud@0.8.8~prepublish: Returned: code: 0  signal: null
16 verbose tar pack [ '/Users/pera/.npm/redux-thunk-crud/0.8.8/package.tgz',
16 verbose tar pack   '/Users/pera/WebstormProjects/redux-thunk-crud' ]
17 verbose tarball /Users/pera/.npm/redux-thunk-crud/0.8.8/package.tgz
18 verbose folder /Users/pera/WebstormProjects/redux-thunk-crud
19 verbose addLocalTarball adding from inside cache /Users/pera/.npm/redux-thunk-crud/0.8.8/package.tgz
20 verbose correctMkdir /Users/pera/.npm correctMkdir not in flight; initializing
21 silly cache afterAdd redux-thunk-crud@0.8.8
22 verbose afterAdd /Users/pera/.npm/redux-thunk-crud/0.8.8/package/package.json not in flight; writing
23 verbose correctMkdir /Users/pera/.npm correctMkdir not in flight; initializing
24 verbose afterAdd /Users/pera/.npm/redux-thunk-crud/0.8.8/package/package.json written
25 silly publish { name: 'redux-thunk-crud',
25 silly publish   version: '0.8.8',
25 silly publish   description: 'A set of utilities to handle creation of common reducers and action creators that work with CRUD endpoints of RESTful APIs',
25 silly publish   main: 'lib/index.js',
25 silly publish   scripts:
25 silly publish    { build: './node_modules/babel-cli/bin/babel.js src --out-dir lib',
25 silly publish      precommit: 'lint-staged && npm test',
25 silly publish      test: './node_modules/mocha/bin/mocha --compilers js:babel-core/register',
25 silly publish      prepublish: 'npm run build' },
25 silly publish   'lint-staged': { '*.{js,json.css}': [ 'prettier --config .prettierrc --write', 'git add' ] },
25 silly publish   repository:
25 silly publish    { type: 'git',
25 silly publish      url: 'git+https://github.com/gogoair/redux-thunk-crud.git' },
25 silly publish   keywords: [ 'redux', 'crud' ],
25 silly publish   author: { name: 'Gogo Inc.' },
25 silly publish   license: 'Apache-2.0',
25 silly publish   bugs: { url: 'https://github.com/gogoair/redux-thunk-crud/issues' },
25 silly publish   homepage: 'https://github.com/gogoair/redux-thunk-crud#readme',
25 silly publish   peerDependencies: { redux: '*' },
25 silly publish   devDependencies:
25 silly publish    { 'babel-cli': '^6.26.0',
25 silly publish      'babel-core': '^6.26.0',
25 silly publish      'babel-polyfill': '^6.26.0',
25 silly publish      'babel-preset-es2015': '^6.24.1',
25 silly publish      'babel-preset-stage-0': '^6.24.1',
25 silly publish      chai: '^4.1.2',
25 silly publish      'chai-as-promised': '^7.1.1',
25 silly publish      'chai-redux': '^1.0.1',
25 silly publish      'es6-promise': '^4.1.1',
25 silly publish      'fetch-mock': '^5.12.2',
25 silly publish      husky: '^0.14.3',
25 silly publish      'isomorphic-fetch': '^2.2.1',
25 silly publish      'lint-staged': '^4.1.3',
25 silly publish      mocha: '^3.5.0',
25 silly publish      prettier: '^1.6.1',
25 silly publish      'redux-thunk': '^2.2.0' },
25 silly publish   readme: '# redux-thunk-crud\n\nredux-thunk-crud is a library that seeks to eliminate the boilerplate of writing highly repetitive reducers and action creators for simple RESTful API CRUD actions, using redux-thunk to handle asynchronous API calls. It\'s made of:\n\nCrudActionCreators - a class encapsulating CRUD action creators for a single endpoint\n\ncreateCrudReducers - a higher-order function that creates a reducer for a given CrudActionCreators instance\n\nfetchAdapter - CrudActionCreators takes an adapter which provides the ability to make API calls. This adapter implements API calls using Fetch API and is included in order to provide a default and make the library testable without adding a dependency\n\n[![npm version](https://badge.fury.io/js/redux-thunk-crud.svg)](http://badge.fury.io/js/redux-thunk-crud)\n\n## Installation\n\n```sh\nnpm install --save redux-thunk-crud\n```\n\nYou will also need Redux, which is a peer dependency, so if you don\'t already have it:\n\n```sh\nnpm install --save redux\n```\n\n## Basic usage\n\nThe parts of the library are available as named exports:\n\n```js\nimport {createCrudReducers, CrudActionCreators} from \'redux-thunk-crud\';\n```\n\nfetchAdapter is also available as a named export but in most cases shouldn\'t be used directly.\n\nThe first step is to instantiate an object containing action creators for an endpoint, since this also generates action types:\n\n```js\nconst someThingsActionCreators = new CrudActionCreators(\'https://jsonplaceholder.typicode.com/posts\', \'SOME_THING\');\n```\n\nSOME_THING is the suffix for action types which will be generated, for example REQUEST_SOME_THINGS, DELETE_SOME_THINGS, etc. A full set of action types is available in someThingsActionCreators.actionTypes\n\nNext, we create the reducer:\n\n```js\nconst someThingsReducer = createCrudReducers(someThingsActionCreators, methods, resetAllDataActinType, mergeDataChanges, initialDataState);\n```\n\nWhich can simply be fed to combineReducers or directly to createStore just like any other reducer.\n\nThe parameters are:\n\n**someThingsActionCreator** - crud action creators that reducer will handle\n\n**methods** - methods you want to use, default is \'CRUD\'. If you want to use read only, you can pass \'R\', etc\n\n**resetAllDataActionType** - action type for which created crud reducers will reset state to initial, default is \'RESET_ALL_DATA\'. Pay attention that you are not already using action type of same name in your app\n**mergeDataChanges** - whether to merge save data on reducer after save, or remove after delete. Defaults to false\n**initialDataState** - initial state for data, defaults to empty array  \n\n## Action creators\n\nThe action creators constructor has the following signature:\n```js\nnew CrudActionCreator(url, actionTypesSuffix, settings = {})\n```\n\nThe parameters are:\n\n**url** - url for the endpoint\n\n**actionTypesSuffix** - a suffix to append to the generic preffies in order to generate action types, should match the name of the resource, in singular, for easier debugging\n\n**settings** - other optional settings, described in the following table:\n\n| Property         | Type    | Default | Description |\n| ------------ | ------- | ------- | ----------- |\n| **adapter** | function | fetchAdapter | A thunk action creator used to make an API call according to the given parameters. Custom adapters may be supplied and are documented below. |\n| **primaryKey** | string | \'id\' | Property of the resource used as primary key. |\n| **actionTypesSuffixPlural** | string | undefined | Action types suffix to use when plural is needed. If undefined will be generated by appending \'S\' to the singular suffix provided as constructor argument. |\n| **json** | boolean | false | Whether to encode request body as json. This is passed on to the adapter which should encode the data and set appropriate headers. |\n| **headers** | array of strings | [] | Headers to add to the request. Content type headers for json requests should be set automatically by the adapter. |\n| **getters** | object | {} | Object that should contain functions used to get data included into dispatched actions from the data received from the API for GET requests. Possible keys are getList and getOne. Both will be passed the response received from the API. |\n| **responseType** | json | undefined | Expected type of response from the API. Passed on to the adapter. The default is undefined to let the adapter use its own default.|\n\nNormally only the following thunk action creators should be used directly:\n\n| Method         | Type    | Description | Arguments |\n| ------------ | ------- | ----------- | ----------- |\n| **fetchList(params)** | R | Makes a GET request to fetch the list of resources. | **params **- object - optional search parameters |\n| **fetchOne(id)** | R | Makes a GET request to fetch a single resource. | **id** - any primitive - primary key of the resource to fetch, appended to the endpoint url |\n| **save(data,id,method)** | C/U | Makes a request to create or update a resource. If no method is specified will make POST to create and PUT to update. | **data** - object - object representing the resource to create or new values for the update <br> **id** - any primitive - optional primary key of the resource to update, appended to the url if provided <br> **method** - string - optinal methed to override the default behavior, if not specified POST will be assumed if id is provided and PUT if id is undefined. |\n| **delete(id)** | D | Makes a DELETE request to delete a resource. | **id** - any primitive - primary key of the resource to delete, appended to the endpoint url |\n\n## Adapters\n\nThe library abstracts away API calls by using an adapter function provided to the constructor as argument. The default adapter implements API calls using Fetch API in order to provide a default that works for testing without adding a higher-level library as dependency. In a real scenario, you will probably want to write your own adapter which implements the calls using your favorite XMLHttpRequest library. An adapter is a thunk creator which should take the same config object as the included fetchAdapter and return a thunk, a function that takes redux\'s dispatch() function as an argument and returns a promise. Adapter config object has the following properties:\n\n| Property | Type | Description |\n| ------------ | ------- | ----------- |\n| **requstAction** | function | Action creator dispatched just before the API call is made. |\n| **successAction** | function | Action creator dispatched when the API call returns a non-error response. |\n| **failureAction** | function | Action creator dispatched when the API call returns an error response. |\n| **method** | string | HTTP method for the API call. |\n| **url** | string | URL of the endpoint to make the request to. |\n| **params** | object | Params for the API call, sent either as query string or request body. |\n| **json** | boolean | Whether to encode params as json and add content type header if request body is sent. |\n| **headers** | array | Additional headers to add to the request. |\n| **responseType** | string | Type of data expected as response. |\n\nAny of the config properties may be omitted and handling undefined properties is left to the implementation of the adapter. It\'s usually a good idea to not dispatch actions when an action creator is not defined for example.\n\n\n## Enhancing and Customizing\n\nIf you need more than the stanadrd CRUD action, writing additional action creators as separate functions is the most straightforward way to implement them. If those actions are repetitive, CrudActionCreators can be extended to add new action creators or override the existing ones.\n\nThe reducer can be enhanced to handle additional action types by passing it through a higher order reducer.\n\n## Contributing\n\nWe are happy to take contributions in form of issues and PRs, but please keep in mind that this is supposed to be a minimal CRUD library. There\'s a lot of API weirdness in the world but there\'s no intent to support every little quirk every API developer thought was a good idea to implement. To handle those in your own project, please refer to the Enhancing and Customizing section above. For anything else, please feel free to open an issue or PR and we will be happy to address it as soon as possible.\n\nWhen making a PR, please make sure you are running prettier and tests as a pre-commit hook and not forcing commits without those. Also please add tests for any bigger change that is not covered by existing tests.',
25 silly publish   readmeFilename: 'README.md',
25 silly publish   gitHead: 'a2ce2bf27d4b1bc43d1f06915ccbb6ba91fd0c46',
25 silly publish   _id: 'redux-thunk-crud@0.8.8',
25 silly publish   _shasum: 'ce83a1485999027379879df47dea1a0a42724e4c',
25 silly publish   _from: '.' }
26 verbose getPublishConfig undefined
27 silly mapToRegistry name redux-thunk-crud
28 silly mapToRegistry using default registry
29 silly mapToRegistry registry https://registry.npmjs.org/
30 silly mapToRegistry data Result {
30 silly mapToRegistry   raw: 'redux-thunk-crud',
30 silly mapToRegistry   scope: null,
30 silly mapToRegistry   escapedName: 'redux-thunk-crud',
30 silly mapToRegistry   name: 'redux-thunk-crud',
30 silly mapToRegistry   rawSpec: '',
30 silly mapToRegistry   spec: 'latest',
30 silly mapToRegistry   type: 'tag' }
31 silly mapToRegistry uri https://registry.npmjs.org/redux-thunk-crud
32 verbose publish registryBase https://registry.npmjs.org/
33 silly publish uploading /Users/pera/.npm/redux-thunk-crud/0.8.8/package.tgz
34 verbose request uri https://registry.npmjs.org/redux-thunk-crud
35 verbose request sending authorization for write operation
36 info attempt registry request try #1 at 1:26:06 PM
37 verbose request using bearer token for auth
38 verbose request id f91c8a585e87839f
39 http request PUT https://registry.npmjs.org/redux-thunk-crud
40 http 403 https://registry.npmjs.org/redux-thunk-crud
41 verbose headers { 'content-type': 'application/json',
41 verbose headers   'cache-control': 'max-age=300',
41 verbose headers   'content-length': '91',
41 verbose headers   'accept-ranges': 'bytes',
41 verbose headers   date: 'Mon, 22 Jan 2018 12:26:10 GMT',
41 verbose headers   via: '1.1 varnish',
41 verbose headers   connection: 'keep-alive',
41 verbose headers   'x-served-by': 'cache-ord1734-ORD',
41 verbose headers   'x-cache': 'MISS',
41 verbose headers   'x-cache-hits': '0',
41 verbose headers   'x-timer': 'S1516623969.803416,VS0,VE1648',
41 verbose headers   vary: 'Accept-Encoding, Accept' }
42 verbose request invalidating /Users/pera/.npm/registry.npmjs.org/redux-thunk-crud on PUT
43 error publish Failed PUT 403
44 verbose stack Error: You cannot publish over the previously published version 0.8.8. : redux-thunk-crud
44 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
44 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
44 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
44 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:187:22)
44 verbose stack     at emitTwo (events.js:106:13)
44 verbose stack     at Request.emit (events.js:191:7)
44 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1044:10)
44 verbose stack     at emitOne (events.js:96:13)
44 verbose stack     at Request.emit (events.js:188:7)
44 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:965:12)
45 verbose statusCode 403
46 verbose pkgid redux-thunk-crud
47 verbose cwd /Users/pera/WebstormProjects/redux-thunk-crud
48 error Darwin 15.6.0
49 error argv "/usr/local/Cellar/node/6.2.0/bin/node" "/usr/local/bin/npm" "publish"
50 error node v6.2.0
51 error npm  v3.10.8
52 error code E403
53 error You cannot publish over the previously published version 0.8.8. : redux-thunk-crud
54 error If you need help, you may report this error at:
54 error     <https://github.com/npm/npm/issues>
55 verbose exit [ 1, true ]
